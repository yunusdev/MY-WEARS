version: "3.8"

networks:
  my-wears:
    name: my-wears

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx.prod.dockerfile
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - php
      - mysql
      - redis
    ports:
      - 80:80
      - 443:443
    networks:
      - my-wears

  php:
    container_name: php
    build:
      context: .
      dockerfile: php.prod.dockerfile
    networks:
      - my-wears

  mysql:
    image: mysql:5.7.32
    container_name: mysql
    ports:
      - 4306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: my_wears
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - my-wears

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - my-wears

  artisan:
    build:
      context: .
      dockerfile: php.prod.dockerfile
    container_name: artisan
    working_dir: /var/www/html
    entrypoint: [ "php", "artisan" ]
    networks:
      - my-wears

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
#      default entrypoint of node is nodemon
    entrypoint: [ "npm" ]
    networks:
      - my-wears

  phpunit:
    build:
      context: .
      dockerfile: php.prod.dockerfile
    container_name: phpunit
    working_dir: /var/www/html
    entrypoint: [ "/var/www/html/vendor/bin/phpunit" ]
    networks:
      - my-wears

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - my-wears

  scheduler:
    build:
      context: .
      dockerfile: php.prod.dockerfile
    container_name: scheduler
    working_dir: /var/www/html
    entrypoint: [ "php", "artisan", "schedule:work" ]
    networks:
      - my-wears

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
